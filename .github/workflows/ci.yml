name: CI

on:
  push:
    branches: [main, search-engine-implementation]
  pull_request:
    branches: [main, search-engine-implementation]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget make

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage flake8 black

      - name: Lint with flake8
        run: |
          # Stop build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check code formatting with black
        run: |
          black --check .

      - name: Download dataset
        run: |
          mkdir -p data
          cd data
          wget -q https://www.cl.uni-heidelberg.de/statnlpgroup/nfcorpus/nfcorpus.tar.gz
          tar -xzf nfcorpus.tar.gz
          mv nfcorpus/train.docs .
          mv nfcorpus/train.titles.queries .
          mv nfcorpus/train.3-2-1.qrel .
          rm nfcorpus.tar.gz
          rm -rf nfcorpus
          cd ..

      - name: Run migrations
        run: |
          python manage.py migrate

      # - name: Index documents
      #   run: |
      #     python manage.py init --clear

      - name: Run tests with coverage
        run: |
          coverage run --source='.' manage.py test
          coverage report
          coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

      - name: Test API endpoints
        run: |
          python manage.py runserver &
          sleep 5
          curl -f http://localhost:8000/api/health/ || exit 1
        # curl -f -X POST http://localhost:8000/api/status/ || exit 1

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy

      - name: Lint with flake8
        run: flake8 . --count --show-source --statistics

      - name: Check formatting with black
        run: black --check .

      - name: Check import sorting with isort
        run: isort --check-only .

      - name: Type check with mypy
        run: mypy search_api/ --ignore-missing-imports || true
